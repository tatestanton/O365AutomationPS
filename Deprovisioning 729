Connect-MsolService 
Connect-ExchangeOnline
 

$RootLocation= "C:\CSV\"

##Log file creation

$date=Get-Date -Format MM-dd-yy-HH-mm

$hour= get-date -Format MM-dd-yy-HH-mm

$log= New-Item $RootLocation\UserDeprovision-$date-log.txt -Force

 
$groupLicenseLog = New-Item $RootLocation\UserDeprovision-$date-GroupLicenselog.txt -Force

 

#import users CSV needs to be in the format 'Userprincipalname;UsageLocation

$users= import-csv C:\csv\O365Deprovision.csv -Delimiter ";"

 

 

##Function that enters text to log file

function Fill-Log ($message) {

 

 

    $hour + " "+ $message | Out-file $log.FullName -Append

 

 

 

}

 

function Remove-o365License ($UPN) {

 

   

    $temp=Get-MsolUser -UserPrincipalName $UPN

    if ($temp -ne $null) {

   
            if ($temp.licenses.GroupsAssigningLicense -eq $null) {
            Set-MsolUserLicense -ObjectId $temp.ObjectId -RemoveLicenses $temp.Licenses.accountskuid

 

            $licenses=$temp.Licenses.accountsku.SkuPartNumber -join ","

 

            Fill-Log "License $licenses for $upn have been removed"
        }
        else {
        
                $group=Get-MsolGroup -ObjectId $temp.licenses.GroupsAssigningLicense
                 "User $UPN is using group licensing through $($group.displayname)" | Out-File $groupLicenseLog
        
        }

   

    } else {

   

        Fill-Log "The operation failed for user $Upn"

       

    }

   

 

}

 

function Block-SignIn ($UPN) {

 

 

        $temp=Get-MsolUser -UserPrincipalName $UPN

        if ($temp -ne $null) {

   

         Set-MsolUser -ObjectId $temp.ObjectId -BlockCredential:$true

         Fill-Log "$UPN has Blocked Signin set to Yes"

        } else {

   

        Fill-Log "Get operation failed for user $Upn"

       

        }

 

}

function Remove-BlockSignIn ($UPN) {

 

 

        $temp=Get-MsolUser -UserPrincipalName $UPN

        if ($temp -ne $null) {

   

         Set-MsolUser -ObjectId $temp.ObjectId -BlockCredential:$false

         Fill-Log "$UPN has Blocked Signin set to No"

        } else {

   

        Fill-Log "Get operation failed for user $Upn"

       

        }

 

}

function Set-LitigationHold ($UPN) {

 

 

        $temp=Get-MsolUser -UserPrincipalName $UPN

        if ($temp -ne $null) {

   

         Set-Mailbox $_.UserPrincipalName -LitigationHoldEnabled $true -LitigationHoldDuration 730 | Out-Null

         Fill-Log "$UPN has LitigationHold set to 730 days"

        } else {

   

        Fill-Log "Get operation failed for user $Upn"

       

        }

 

}
foreach ($user in $users) {

$mbx= get-mailbox $user.UserPrincipalName

 if ($mbx.customattribute3 -eq "APL") {
 
    #IF APL exists in attribute 3 then enable litigation hold on the mailbox and remove and block signin
    Set-LitigationHold $user.UserPrincipalName
    Remove-BlockSignIn $user.UserPrincipalName
 
 
 }else {

    Remove-o365License $user.UserPrincipalName
    Block-SignIn $user.UserPrincipalName
    }

}

 
